{"version":3,"sources":["types/Colors.ts","GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["Colors","GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","LoadOptions","App","useState","setGood","loadOption","setLoadOption","useEffect","All","goodsAPI","First5","sort","good1","good2","localeCompare","slice","LoadByRedColor","filter","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4JAAYA,E,6CAAAA,K,qBAAAA,E,uBAAAA,E,uBAAAA,M,gBCQCC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAON,EAAOI,EAAKE,QAH9B,SAKGF,EAAKG,MAJDH,EAAKI,UCPX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICHFC,G,SAAAA,K,UAAAA,E,gBAAAA,E,sBAAAA,M,KAME,IAAMC,EAAgB,WAC3B,MAAwBC,mBAAiB,IAAzC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAAoCD,mBAA6B,MAAjE,mBAAOE,EAAP,KAAmBC,EAAnB,KAkBA,OAhBAC,qBAAU,WACR,OAAQF,GACN,KAAKJ,EAAYO,IACfC,IAAkBX,KAAKM,GACvB,MACF,KAAKH,EAAYS,ODXdd,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMsB,MAAK,SAACC,EAAOC,GAChC,OAAOD,EAAMlB,KAAKoB,cAAcD,EAAMnB,SACrCqB,MAAM,EAAG,MCSajB,KAAKM,GAC1B,MACF,KAAKH,EAAYe,eDPdpB,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM4B,QACnB,SAAA1B,GAAI,MAAmB,QAAfA,EAAKE,YCMYK,KAAKM,GAC5B,MACF,QACEE,EAAc,SAEjB,CAACD,IAGF,sBAAKa,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMd,EAAcL,EAAYO,MAH3C,4BAQA,wBACEW,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMd,EAAcL,EAAYS,SAH3C,gCAQA,wBACES,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMd,EAAcL,EAAYe,iBAH3C,4BAQCX,GACC,cAAC,EAAD,CAAWhB,MAAOE,QC3D1B8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.e1d05705.chunk.js","sourcesContent":["export enum Colors {\n  red = 'rgb(255, 0, 0)',\n  green = 'rgb(0, 128, 0)',\n  blue = 'rgb(0, 0, 255)',\n}\n","import React from 'react';\nimport { Good } from './types/Good';\nimport { Colors } from './types/Colors';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: Colors[good.color as keyof typeof Colors] }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((good1, good2) => {\n      return good1.name.localeCompare(good2.name);\n    }).slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(\n      good => good.color === 'red',\n    ));\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport * as goodsAPI from './api/goods';\n\nenum LoadOptions {\n  All = 'all',\n  First5 = 'first5',\n  LoadByRedColor = 'red',\n}\n\nexport const App: React.FC = () => {\n  const [good, setGood] = useState<Good[]>([]);\n  const [loadOption, setLoadOption] = useState<LoadOptions | null>(null);\n\n  useEffect(() => {\n    switch (loadOption) {\n      case LoadOptions.All:\n        goodsAPI.getAll().then(setGood);\n        break;\n      case LoadOptions.First5:\n        goodsAPI.get5First().then(setGood);\n        break;\n      case LoadOptions.LoadByRedColor:\n        goodsAPI.getRedGoods().then(setGood);\n        break;\n      default:\n        setLoadOption(null);\n    }\n  }, [loadOption]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setLoadOption(LoadOptions.All)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setLoadOption(LoadOptions.First5)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setLoadOption(LoadOptions.LoadByRedColor)}\n      >\n        Load red goods\n      </button>\n\n      {loadOption && (\n        <GoodsList goods={good} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}